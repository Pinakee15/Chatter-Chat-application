[{"C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\index.js":"1","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\App.js":"2","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\Join\\Join.js":"3","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\Chat\\Chat.js":"4","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\Rooms\\Rooms.js":"5","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\Room\\Room.js":"6"},{"size":154,"mtime":1612370382891,"results":"7","hashOfConfig":"8"},{"size":1461,"mtime":1612626697219,"results":"9","hashOfConfig":"8"},{"size":1393,"mtime":1612709135007,"results":"10","hashOfConfig":"8"},{"size":2758,"mtime":1612770042004,"results":"11","hashOfConfig":"8"},{"size":888,"mtime":1612708526044,"results":"12","hashOfConfig":"8"},{"size":692,"mtime":1612703714238,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1bu79ec",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\index.js",[],["30","31"],"C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\App.js",["32"],"//import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Chat from './components/Chat/Chat';\r\nimport Join from './components/Join/Join.js';\r\n\r\nimport React, { useState } from \"react\";\r\n//import ClientComponent from \"./ClientComponent\";\r\n\r\nfunction App() {\r\n    //const [loadClient, setLoadClient] = useState(true);\r\n    return (\r\n        <Router>\r\n            <div className=\"App\" >\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Join} ></Route>\r\n                    <Route path=\"/chat\" component={Chat} ></Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n// function App() {\r\n//     return (\r\n//         <Router>\r\n//             <div className=\"App\" >\r\n//                 < Rooms />\r\n//                 <Switch>\r\n//                     <Router>\r\n//                         <Route path=\"/\" exact component={Join} ></Route>\r\n//                         <Route path=\"/chat\" component={Chat} ></Route>\r\n//                     </Router>\r\n//                 </Switch>\r\n//             </div>\r\n//         </Router>\r\n\r\n<>\r\n    {/* LOAD OR UNLOAD THE CLIENT\r\n            <button onClick={() => setLoadClient(prevState => !prevState)}>\r\n                STOP CLIENT\r\n            </button>\r\n            {/* SOCKET IO CLIENT*/}\r\n    {/* {loadClient ? <Chat /> : null} */}\r\n</>\r\n\r\n//     )\r\n// }\r\n\r\n// export default App\r\n","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\Join\\Join.js",[],"C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\Chat\\Chat.js",["33"],"C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\Rooms\\Rooms.js",["34"],"import React, { useState } from 'react';\r\nimport Room from '../Room/Room';\r\n\r\nfunction Rooms({ rooms, selectOneRoom }) {\r\n    // const initialRooms = [\r\n    //     { room: \"Room 1\", status: false },\r\n    //     { room: \"Room 2\", status: false },\r\n    //     { room: \"Room 3\", status: false },\r\n    // ]\r\n    // const [rooms, setRooms] = useState(initialRooms);\r\n\r\n    // const selectOneRoom = (index, newStatus) => {\r\n    //     console.log(\"we clicked the Room :\");\r\n    //     const tempRooms = [...initialRooms]\r\n    //     tempRooms[index].status = newStatus;\r\n    //     setRooms(tempRooms);\r\n    // }\r\n\r\n    console.log(rooms);\r\n    const newRooms = rooms.map((ob, idx) => (<Room key={idx} index={idx} roomName={ob.room} selectOneRoom={selectOneRoom} status={ob.status} />));\r\n    return (\r\n        <div>\r\n            {newRooms}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rooms\r\n\r\n","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\Room\\Room.js",["35","36"],"import React, { useState } from 'react';\r\nimport styles from \"./Room.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Room({ index, roomName, selectOneRoom, status }) {\r\n    //const [status, setStatus] = useState(false);\r\n    // const changeColor = () => {\r\n    //     setBgColor('blue');\r\n    //     setStatus((prevStat) => {\r\n    //         return !prevStat;\r\n    //     });\r\n    // }\r\n    const changeColor = selectOneRoom;\r\n    return (\r\n        <div style={status ? { backgroundColor: \"blue\" } : null} className={styles.Room} onClick={() => changeColor(index, !status)}>\r\n            <p>This is the room {roomName}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Room\r\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":6,"column":17,"nodeType":"43","messageId":"44","endLine":6,"endColumn":25},{"ruleId":"45","severity":1,"message":"46","line":29,"column":6,"nodeType":"47","endLine":29,"endColumn":8,"suggestions":"48"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},{"ruleId":"41","severity":1,"message":"49","line":3,"column":10,"nodeType":"43","messageId":"44","endLine":3,"endColumn":14},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'messages', 'props.location.selectedRoom', and 'props.location.userName'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.","ArrayExpression",["52"],"'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [messages, props.location.selectedRoom, props.location.userName]",{"range":"55","text":"56"},[846,848],"[messages, props.location.selectedRoom, props.location.userName]"]