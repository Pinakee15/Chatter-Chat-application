[{"C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\index.js":"1","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\App.js":"2","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\Join\\Join.js":"3","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\Chat\\Chat.js":"4","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\Rooms\\Rooms.js":"5","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\Room\\Room.js":"6","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\apis\\cricketApiData.js":"7","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\CricketScores\\CricketScores.js":"8","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\CricketScores\\getCricketScore.js":"9","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\CricketScores\\CricketScore\\CricketScore.js":"10"},{"size":154,"mtime":1612370382891,"results":"11","hashOfConfig":"12"},{"size":1463,"mtime":1612977546704,"results":"13","hashOfConfig":"12"},{"size":1393,"mtime":1612709135007,"results":"14","hashOfConfig":"12"},{"size":2908,"mtime":1612977772167,"results":"15","hashOfConfig":"12"},{"size":888,"mtime":1612708526044,"results":"16","hashOfConfig":"12"},{"size":692,"mtime":1612703714238,"results":"17","hashOfConfig":"12"},{"size":309,"mtime":1612878613019,"results":"18","hashOfConfig":"12"},{"size":744,"mtime":1613045768333,"results":"19","hashOfConfig":"12"},{"size":915,"mtime":1613044932873,"results":"20","hashOfConfig":"12"},{"size":1506,"mtime":1613056587352,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1bu79ec",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\index.js",[],["49","50"],"C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\App.js",["51"],"//import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Chat from './components/Chat/Chat';\r\nimport Join from './components/Join/Join.js';\r\nimport React, { useState } from \"react\";\r\n\r\n\r\n//import ClientComponent from \"./ClientComponent\";\r\n\r\nfunction App() {\r\n    //const [loadClient, setLoadClient] = useState(true);\r\n    return (\r\n        <Router>\r\n            <div className=\"App\" >\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Join} ></Route>\r\n                    <Route path=\"/chat\" component={Chat} ></Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n// function App() {\r\n//     return (\r\n//         <Router>\r\n//             <div className=\"App\" >\r\n//                 < Rooms />\r\n//                 <Switch>\r\n//                     <Router>\r\n//                         <Route path=\"/\" exact component={Join} ></Route>\r\n//                         <Route path=\"/chat\" component={Chat} ></Route>\r\n//                     </Router>\r\n//                 </Switch>\r\n//             </div>\r\n//         </Router>\r\n\r\n<>\r\n    {/* LOAD OR UNLOAD THE CLIENT\r\n            <button onClick={() => setLoadClient(prevState => !prevState)}>\r\n                STOP CLIENT\r\n            </button>\r\n            {/* SOCKET IO CLIENT*/}\r\n    {/* {loadClient ? <Chat /> : null} */}\r\n</>\r\n\r\n//     )\r\n// }\r\n\r\n// export default App\r\n","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\Join\\Join.js",[],"C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\Chat\\Chat.js",["52"],"import React, { useEffect, useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport CricketScores from '../CricketScores/CricketScores';\r\nconst ENDPOINT = \"localhost:5000\" //\"http://127.0.0.1:5000\";\r\n\r\nlet socket;\r\nexport default function Chat(props) {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    socket = socketIOClient(ENDPOINT);\r\n    //console.log(\"Entered for the first time\");\r\n\r\n    socket.on('welcome', (mssg, admin) => {\r\n      setMessages(prevMessages => [...prevMessages, { userName: 'admin', mssg }])\r\n    });\r\n\r\n    socket.emit(\"join\", props.location.userName, props.location.selectedRoom);\r\n\r\n    socket.on('message', (mssg, userName) => {\r\n      setMessages(prevMessages => [...prevMessages, { userName, mssg }])\r\n    });\r\n\r\n    return () => socket.disconnect();\r\n\r\n  }, []);\r\n\r\n  const allMessages = messages.map(message => <p>{message.userName} : {message.mssg}</p>);\r\n  //console.log(`Checking .... ${allMessages} and ${messages}`);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    console.log(`Button clicked with value ${e.target}`);\r\n    socket.emit('send message', message, props.location.selectedRoom, () => {\r\n      console.log('Hello dear.....')\r\n      setMessage(\"\");\r\n      console.log(`The new message value ${message}`)\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>Welcome {props.location.userName} to the {props.location.selectedRoom}</p>\r\n      { allMessages}\r\n      <input type=\"text\" placeholder=\"Enter your message here...\"\r\n        value={message} onChange={(e) => setMessage(e.target.value)}\r\n        onKeyPress={e => e.key === 'Enter' ? sendMessage(e) : null}\r\n      />\r\n      <button onClick={(e) => sendMessage(e)}>Send</button>\r\n      <CricketScores />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import io from 'socket.io-client';\r\n// const SERVER_URL = \"localhost:5000\";\r\n\r\n// function Chat() {\r\n//     let socket;\r\n//     const [name, setName] = useState(\"\")\r\n\r\n//     useEffect(() => {\r\n//         // { transports: ['websocket', 'polling', 'flashsocket'] }\r\n//         socket = io.connect('SERVER_URL');\r\n//         console.log(socket);\r\n//         socket.on('connection', () => {\r\n//             console.log(\"Connected to the server\");\r\n//             socket.emit(\"New event\", \"This will be the data\");\r\n//         });\r\n//     }, [])\r\n\r\n//     socket = io.connect('SERVER_URL');\r\n//     console.log(socket);\r\n//     socket.on('connection', () => {\r\n//         console.log(\"Connected to the server\");\r\n//         socket.emit(\"New event\", \"This will be the data\");\r\n//     });\r\n\r\n//     return (\r\n//         <div>\r\n//             This is the chat component\r\n//         </div>\r\n//     )\r\n// }\r\n// export default Chat;\r\n\r\n\r\n\r\n","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\Rooms\\Rooms.js",["53"],"import React, { useState } from 'react';\r\nimport Room from '../Room/Room';\r\n\r\nfunction Rooms({ rooms, selectOneRoom }) {\r\n    // const initialRooms = [\r\n    //     { room: \"Room 1\", status: false },\r\n    //     { room: \"Room 2\", status: false },\r\n    //     { room: \"Room 3\", status: false },\r\n    // ]\r\n    // const [rooms, setRooms] = useState(initialRooms);\r\n\r\n    // const selectOneRoom = (index, newStatus) => {\r\n    //     console.log(\"we clicked the Room :\");\r\n    //     const tempRooms = [...initialRooms]\r\n    //     tempRooms[index].status = newStatus;\r\n    //     setRooms(tempRooms);\r\n    // }\r\n\r\n    console.log(rooms);\r\n    const newRooms = rooms.map((ob, idx) => (<Room key={idx} index={idx} roomName={ob.room} selectOneRoom={selectOneRoom} status={ob.status} />));\r\n    return (\r\n        <div>\r\n            {newRooms}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rooms\r\n\r\n","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\Room\\Room.js",["54","55"],"import React, { useState } from 'react';\r\nimport styles from \"./Room.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Room({ index, roomName, selectOneRoom, status }) {\r\n    //const [status, setStatus] = useState(false);\r\n    // const changeColor = () => {\r\n    //     setBgColor('blue');\r\n    //     setStatus((prevStat) => {\r\n    //         return !prevStat;\r\n    //     });\r\n    // }\r\n    const changeColor = selectOneRoom;\r\n    return (\r\n        <div style={status ? { backgroundColor: \"blue\" } : null} className={styles.Room} onClick={() => changeColor(index, !status)}>\r\n            <p>This is the room {roomName}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Room\r\n","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\apis\\cricketApiData.js",[],["56","57"],"C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\CricketScores\\CricketScores.js",["58"],"import React, { useEffect, useState } from 'react';\r\nimport CricketScore from './CricketScore/CricketScore';\r\nimport getCricketScores from './getCricketScore';\r\nimport \"./CricketScores.css\";\r\n\r\nconst CricketScores = () => {\r\n    const [matches, setMatches] = useState([]);\r\n    useEffect(() => {\r\n        getCricketScores()\r\n            .then(data => {\r\n                console.log(data)\r\n                return setMatches([...data])\r\n            })\r\n            .then(() => console.log(matches))\r\n    }, []);\r\n    const allMatches = matches.map((match, id) => <CricketScore match={match} key={id} />);\r\n    return (\r\n        <div className=\"scoreContainer\">\r\n            {allMatches}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CricketScores\r\n","C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\CricketScores\\getCricketScore.js",[],"C:\\Users\\pinak\\OneDrive\\Desktop\\Chatter-Chat-application\\client\\src\\components\\CricketScores\\CricketScore\\CricketScore.js",["59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":5,"column":17,"nodeType":"67","messageId":"68","endLine":5,"endColumn":25},{"ruleId":"69","severity":1,"message":"70","line":28,"column":6,"nodeType":"71","endLine":28,"endColumn":8,"suggestions":"72"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"73","line":3,"column":10,"nodeType":"67","messageId":"68","endLine":3,"endColumn":14},{"ruleId":"61","replacedBy":"74"},{"ruleId":"63","replacedBy":"75"},{"ruleId":"69","severity":1,"message":"76","line":15,"column":8,"nodeType":"71","endLine":15,"endColumn":10,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":21,"column":25,"nodeType":"80","endLine":21,"endColumn":92},{"ruleId":"78","severity":1,"message":"79","line":27,"column":25,"nodeType":"80","endLine":27,"endColumn":92},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.location.selectedRoom' and 'props.location.userName'. Either include them or remove the dependency array.","ArrayExpression",["83"],"'Link' is defined but never used.",["81"],["82"],"React Hook useEffect has a missing dependency: 'matches'. Either include it or remove the dependency array.",["84"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [props.location.selectedRoom, props.location.userName]",{"range":"89","text":"90"},"Update the dependencies array to be: [matches]",{"range":"91","text":"92"},[891,893],"[props.location.selectedRoom, props.location.userName]",[505,507],"[matches]"]